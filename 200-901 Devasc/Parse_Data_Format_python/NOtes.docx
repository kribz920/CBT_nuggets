Parsing Data Formats with Python

Python has easy libraries — both built-in and third party — to import and export data in popular data formats.

van/naar pyton naar xml/yaml/jsnon

=====================================================


Parsing XML with Python

You can use the ElementTree library, lxml, or xmltodict to work with XML in Python.


build in python
sample.xml
<?xml version="1.0" encoding="UTF-8"?>
<People>
    <Person Id="1">
        <FirstName>Benjamin</FirstName>
        <LastName>Finkel</LastName>
        <Email>ben.finkel@cbtnuggets.com</Email>
    </Person>

    <Person Id="2">
        <FirstName>Jane</FirstName>
        <LastName>Doe</LastName>
        <Email>jane.doe@cbtnuggets.com</Email>
    </Person>

    <Person Id="3">
        <FirstName>Pat</FirstName>
        <LastName>Smith</LastName>
        <Email>pat.smith@cbtnuggets.com</Email>
    </Person>
            
</People>








import xml.etree.ElementTree as ET

#Get the XML file data
stream = open('sample.xml','r')

#Parse the data into an ElementTree object
xml = ET.parse(stream)

#Get the 'root' Element object from the ElementTree
root = xml.getroot()

#Iterate through each child of the root Element
for e in root:
    #Print the stringified version of the element
    print(ET.tostring(e))
    print("")
    
    #Print the 'Id' attribute of the Element object
    print(e.get("Id"))


strongly writen people en Person


lxml is nu standaard en rubost

The preferred method for working with XML data in Python is to use which library?
lxml

=============================================

XML Libraries in Action

Watch this Nugget for some hands-on coding with XML libraries.
Which function in xmltodict is used to convert an XML-formatted string into a Python dictionary object?
.parse()

mooi uitleg maar kan iet mee doen

===============================================

Parsing JSON with Python

JSON is easy to work with in Python, which has built-in libraries for parsing and editing JSON.

data types json - python


object is dictionary
array is list
string is str
number(int) is int
number(real)  is float
true is True
false  is False
null in None

import json

jsonstr = """{"people":[{"Id":"1","FirstName":"Benjamin","LastName":"Finkel",
    "Email":"ben.finkel@cbtnuggets.com"},{"Id":"2","FirstName":"Jane","LastName":"Doe",
    "Email":"jane.doe@cbtnuggets.com"},{"Id":"3","FirstName":"Pat","LastName":"Smith",
    "Email":"pat.smith@cbtnuggets.com"}]}"""

jsonobj = json.loads(jsonstr)

print(jsonobj['people'][1])

jsonobj = json.load(open('sample.json'))

print(jsonobj['people'])


Which library in Python is used to work with JSON data?json

===============================================

Parsing YAML with Python

YAML has its own quirks that differentiate it from JSON.

---
people:
- Id: 1
  FirstName: Benjamin
  LastName: Finkel
  Email: ben.finkel@cbtnuggets.com
- Id: 2
  FirstName: Jane
  LastName: Doe
  Email: jane.doe@cbtnuggets.com
- Id: 3
  FirstName: Pat
  LastName: Smith
  Email: pat.smith@cbtnuggets.com



pip instaLL pyyaml

import yaml
from yaml import load, load_all

stream = open('sample.yaml','r')
documents = load_all(stream, Loader=yaml.FullLoader)

print(type(documents))

for doc in documents:
    print(type(doc))

    print(doc['people'][1]['LastName'])



    load voor alleen het eerste document en load all als er meerdere yamle documenten zijn

Which code is used to denote the start of a new YAML document?
---


====================================================================


Parsing Data Formats in Summary

Ben Summarizes this Skill. 

op zich makkelijk

